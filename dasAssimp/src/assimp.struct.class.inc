// this file is generated via daScript automatic C++ binder
// all user modifications will be lost after this file is re-generated

struct aiVector3D_GeneratedAnnotation : ManagedStructureAnnotation<aiVector3D> {
	aiVector3D_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiVector3D", ml, "aiVector3D") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(x)>("x","x");
		addField<DAS_BIND_MANAGED_FIELD(y)>("y","y");
		addField<DAS_BIND_MANAGED_FIELD(z)>("z","z");
	}
};

struct aiVector2D_GeneratedAnnotation : ManagedStructureAnnotation<aiVector2D> {
	aiVector2D_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiVector2D", ml, "aiVector2D") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(x)>("x","x");
		addField<DAS_BIND_MANAGED_FIELD(y)>("y","y");
	}
};

struct aiColor4D_GeneratedAnnotation : ManagedStructureAnnotation<aiColor4D> {
	aiColor4D_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiColor4D", ml, "aiColor4D") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(r)>("r","r");
		addField<DAS_BIND_MANAGED_FIELD(g)>("g","g");
		addField<DAS_BIND_MANAGED_FIELD(b)>("b","b");
		addField<DAS_BIND_MANAGED_FIELD(a)>("a","a");
	}
};

struct aiMatrix3x3_GeneratedAnnotation : ManagedStructureAnnotation<aiMatrix3x3> {
	aiMatrix3x3_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiMatrix3x3", ml, "aiMatrix3x3") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(a1)>("a1","a1");
		addField<DAS_BIND_MANAGED_FIELD(a2)>("a2","a2");
		addField<DAS_BIND_MANAGED_FIELD(a3)>("a3","a3");
		addField<DAS_BIND_MANAGED_FIELD(b1)>("b1","b1");
		addField<DAS_BIND_MANAGED_FIELD(b2)>("b2","b2");
		addField<DAS_BIND_MANAGED_FIELD(b3)>("b3","b3");
		addField<DAS_BIND_MANAGED_FIELD(c1)>("c1","c1");
		addField<DAS_BIND_MANAGED_FIELD(c2)>("c2","c2");
		addField<DAS_BIND_MANAGED_FIELD(c3)>("c3","c3");
	}
};

struct aiMatrix4x4_GeneratedAnnotation : ManagedStructureAnnotation<aiMatrix4x4> {
	aiMatrix4x4_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiMatrix4x4", ml, "aiMatrix4x4") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(a1)>("a1","a1");
		addField<DAS_BIND_MANAGED_FIELD(a2)>("a2","a2");
		addField<DAS_BIND_MANAGED_FIELD(a3)>("a3","a3");
		addField<DAS_BIND_MANAGED_FIELD(a4)>("a4","a4");
		addField<DAS_BIND_MANAGED_FIELD(b1)>("b1","b1");
		addField<DAS_BIND_MANAGED_FIELD(b2)>("b2","b2");
		addField<DAS_BIND_MANAGED_FIELD(b3)>("b3","b3");
		addField<DAS_BIND_MANAGED_FIELD(b4)>("b4","b4");
		addField<DAS_BIND_MANAGED_FIELD(c1)>("c1","c1");
		addField<DAS_BIND_MANAGED_FIELD(c2)>("c2","c2");
		addField<DAS_BIND_MANAGED_FIELD(c3)>("c3","c3");
		addField<DAS_BIND_MANAGED_FIELD(c4)>("c4","c4");
		addField<DAS_BIND_MANAGED_FIELD(d1)>("d1","d1");
		addField<DAS_BIND_MANAGED_FIELD(d2)>("d2","d2");
		addField<DAS_BIND_MANAGED_FIELD(d3)>("d3","d3");
		addField<DAS_BIND_MANAGED_FIELD(d4)>("d4","d4");
	}
};

struct aiQuaternion_GeneratedAnnotation : ManagedStructureAnnotation<aiQuaternion> {
	aiQuaternion_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiQuaternion", ml, "aiQuaternion") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(w)>("w","w");
		addField<DAS_BIND_MANAGED_FIELD(x)>("x","x");
		addField<DAS_BIND_MANAGED_FIELD(y)>("y","y");
		addField<DAS_BIND_MANAGED_FIELD(z)>("z","z");
	}
};

struct aiPlane_GeneratedAnnotation : ManagedStructureAnnotation<aiPlane> {
	aiPlane_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiPlane", ml, "aiPlane") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(a)>("a","a");
		addField<DAS_BIND_MANAGED_FIELD(b)>("b","b");
		addField<DAS_BIND_MANAGED_FIELD(c)>("c","c");
		addField<DAS_BIND_MANAGED_FIELD(d)>("d","d");
	}
};

struct aiRay_GeneratedAnnotation : ManagedStructureAnnotation<aiRay> {
	aiRay_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiRay", ml, "aiRay") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(pos)>("pos","pos");
		addField<DAS_BIND_MANAGED_FIELD(dir)>("dir","dir");
	}
};

struct aiColor3D_GeneratedAnnotation : ManagedStructureAnnotation<aiColor3D> {
	aiColor3D_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiColor3D", ml, "aiColor3D") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(r)>("r","r");
		addField<DAS_BIND_MANAGED_FIELD(g)>("g","g");
		addField<DAS_BIND_MANAGED_FIELD(b)>("b","b");
	}
};

struct aiString_GeneratedAnnotation : ManagedStructureAnnotation<aiString> {
	aiString_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiString", ml, "aiString") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(length)>("length","length");
		addField<DAS_BIND_MANAGED_FIELD(data)>("data","data");
	}
};

struct aiMemoryInfo_GeneratedAnnotation : ManagedStructureAnnotation<aiMemoryInfo> {
	aiMemoryInfo_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiMemoryInfo", ml, "aiMemoryInfo") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(textures)>("textures","textures");
		addField<DAS_BIND_MANAGED_FIELD(materials)>("materials","materials");
		addField<DAS_BIND_MANAGED_FIELD(meshes)>("meshes","meshes");
		addField<DAS_BIND_MANAGED_FIELD(nodes)>("nodes","nodes");
		addField<DAS_BIND_MANAGED_FIELD(animations)>("animations","animations");
		addField<DAS_BIND_MANAGED_FIELD(cameras)>("cameras","cameras");
		addField<DAS_BIND_MANAGED_FIELD(lights)>("lights","lights");
		addField<DAS_BIND_MANAGED_FIELD(total)>("total","total");
	}
};

struct aiImporterDesc_GeneratedAnnotation : ManagedStructureAnnotation<aiImporterDesc> {
	aiImporterDesc_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiImporterDesc", ml, "aiImporterDesc") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mName)>("mName","mName");
		addField<DAS_BIND_MANAGED_FIELD(mAuthor)>("mAuthor","mAuthor");
		addField<DAS_BIND_MANAGED_FIELD(mMaintainer)>("mMaintainer","mMaintainer");
		addField<DAS_BIND_MANAGED_FIELD(mComments)>("mComments","mComments");
		addField<DAS_BIND_MANAGED_FIELD(mFlags)>("mFlags","mFlags");
		addField<DAS_BIND_MANAGED_FIELD(mMinMajor)>("mMinMajor","mMinMajor");
		addField<DAS_BIND_MANAGED_FIELD(mMinMinor)>("mMinMinor","mMinMinor");
		addField<DAS_BIND_MANAGED_FIELD(mMaxMajor)>("mMaxMajor","mMaxMajor");
		addField<DAS_BIND_MANAGED_FIELD(mMaxMinor)>("mMaxMinor","mMaxMinor");
		addField<DAS_BIND_MANAGED_FIELD(mFileExtensions)>("mFileExtensions","mFileExtensions");
	}
};

struct aiLogStream_GeneratedAnnotation : ManagedStructureAnnotation<aiLogStream> {
	aiLogStream_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiLogStream", ml, "aiLogStream") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(user)>("user","user");
	}
};

struct aiPropertyStore_GeneratedAnnotation : ManagedStructureAnnotation<aiPropertyStore> {
	aiPropertyStore_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiPropertyStore", ml, "aiPropertyStore") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(sentinel)>("sentinel","sentinel");
	}
};

struct aiTexel_GeneratedAnnotation : ManagedStructureAnnotation<aiTexel> {
	aiTexel_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiTexel", ml, "aiTexel") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(b)>("b","b");
		addField<DAS_BIND_MANAGED_FIELD(g)>("g","g");
		addField<DAS_BIND_MANAGED_FIELD(r)>("r","r");
		addField<DAS_BIND_MANAGED_FIELD(a)>("a","a");
	}
};

struct aiTexture_GeneratedAnnotation : ManagedStructureAnnotation<aiTexture> {
	aiTexture_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiTexture", ml, "aiTexture") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mWidth)>("mWidth","mWidth");
		addField<DAS_BIND_MANAGED_FIELD(mHeight)>("mHeight","mHeight");
		addField<DAS_BIND_MANAGED_FIELD(achFormatHint)>("achFormatHint","achFormatHint");
		addField<DAS_BIND_MANAGED_FIELD(pcData)>("pcData","pcData");
	}
};

struct aiFace_GeneratedAnnotation : ManagedStructureAnnotation<aiFace> {
	aiFace_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiFace", ml, "aiFace") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mNumIndices)>("mNumIndices","mNumIndices");
		addField<DAS_BIND_MANAGED_FIELD(mIndices)>("mIndices","mIndices");
	}
};

struct aiVertexWeight_GeneratedAnnotation : ManagedStructureAnnotation<aiVertexWeight> {
	aiVertexWeight_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiVertexWeight", ml, "aiVertexWeight") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mVertexId)>("mVertexId","mVertexId");
		addField<DAS_BIND_MANAGED_FIELD(mWeight)>("mWeight","mWeight");
	}
};

struct aiBone_GeneratedAnnotation : ManagedStructureAnnotation<aiBone> {
	aiBone_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiBone", ml, "aiBone") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mName)>("mName","mName");
		addField<DAS_BIND_MANAGED_FIELD(mNumWeights)>("mNumWeights","mNumWeights");
		addField<DAS_BIND_MANAGED_FIELD(mWeights)>("mWeights","mWeights");
		addField<DAS_BIND_MANAGED_FIELD(mOffsetMatrix)>("mOffsetMatrix","mOffsetMatrix");
	}
};

struct aiAnimMesh_GeneratedAnnotation : ManagedStructureAnnotation<aiAnimMesh> {
	aiAnimMesh_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiAnimMesh", ml, "aiAnimMesh") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mVertices)>("mVertices","mVertices");
		addField<DAS_BIND_MANAGED_FIELD(mNormals)>("mNormals","mNormals");
		addField<DAS_BIND_MANAGED_FIELD(mTangents)>("mTangents","mTangents");
		addField<DAS_BIND_MANAGED_FIELD(mBitangents)>("mBitangents","mBitangents");
		addField<DAS_BIND_MANAGED_FIELD(mColors)>("mColors","mColors");
		addField<DAS_BIND_MANAGED_FIELD(mTextureCoords)>("mTextureCoords","mTextureCoords");
		addField<DAS_BIND_MANAGED_FIELD(mNumVertices)>("mNumVertices","mNumVertices");
		addField<DAS_BIND_MANAGED_FIELD(mWeight)>("mWeight","mWeight");
	}
};

struct aiMesh_GeneratedAnnotation : ManagedStructureAnnotation<aiMesh> {
	aiMesh_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiMesh", ml, "aiMesh") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mPrimitiveTypes)>("mPrimitiveTypes","mPrimitiveTypes");
		addField<DAS_BIND_MANAGED_FIELD(mNumVertices)>("mNumVertices","mNumVertices");
		addField<DAS_BIND_MANAGED_FIELD(mNumFaces)>("mNumFaces","mNumFaces");
		addField<DAS_BIND_MANAGED_FIELD(mVertices)>("mVertices","mVertices");
		addField<DAS_BIND_MANAGED_FIELD(mNormals)>("mNormals","mNormals");
		addField<DAS_BIND_MANAGED_FIELD(mTangents)>("mTangents","mTangents");
		addField<DAS_BIND_MANAGED_FIELD(mBitangents)>("mBitangents","mBitangents");
		addField<DAS_BIND_MANAGED_FIELD(mColors)>("mColors","mColors");
		addField<DAS_BIND_MANAGED_FIELD(mTextureCoords)>("mTextureCoords","mTextureCoords");
		addField<DAS_BIND_MANAGED_FIELD(mNumUVComponents)>("mNumUVComponents","mNumUVComponents");
		addField<DAS_BIND_MANAGED_FIELD(mFaces)>("mFaces","mFaces");
		addField<DAS_BIND_MANAGED_FIELD(mNumBones)>("mNumBones","mNumBones");
		addField<DAS_BIND_MANAGED_FIELD(mBones)>("mBones","mBones");
		addField<DAS_BIND_MANAGED_FIELD(mMaterialIndex)>("mMaterialIndex","mMaterialIndex");
		addField<DAS_BIND_MANAGED_FIELD(mName)>("mName","mName");
		addField<DAS_BIND_MANAGED_FIELD(mNumAnimMeshes)>("mNumAnimMeshes","mNumAnimMeshes");
		addField<DAS_BIND_MANAGED_FIELD(mAnimMeshes)>("mAnimMeshes","mAnimMeshes");
		addField<DAS_BIND_MANAGED_FIELD(mMethod)>("mMethod","mMethod");
	}
};

struct aiLight_GeneratedAnnotation : ManagedStructureAnnotation<aiLight> {
	aiLight_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiLight", ml, "aiLight") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mName)>("mName","mName");
		addField<DAS_BIND_MANAGED_FIELD(mType)>("mType","mType");
		addField<DAS_BIND_MANAGED_FIELD(mPosition)>("mPosition","mPosition");
		addField<DAS_BIND_MANAGED_FIELD(mDirection)>("mDirection","mDirection");
		addField<DAS_BIND_MANAGED_FIELD(mUp)>("mUp","mUp");
		addField<DAS_BIND_MANAGED_FIELD(mAttenuationConstant)>("mAttenuationConstant","mAttenuationConstant");
		addField<DAS_BIND_MANAGED_FIELD(mAttenuationLinear)>("mAttenuationLinear","mAttenuationLinear");
		addField<DAS_BIND_MANAGED_FIELD(mAttenuationQuadratic)>("mAttenuationQuadratic","mAttenuationQuadratic");
		addField<DAS_BIND_MANAGED_FIELD(mColorDiffuse)>("mColorDiffuse","mColorDiffuse");
		addField<DAS_BIND_MANAGED_FIELD(mColorSpecular)>("mColorSpecular","mColorSpecular");
		addField<DAS_BIND_MANAGED_FIELD(mColorAmbient)>("mColorAmbient","mColorAmbient");
		addField<DAS_BIND_MANAGED_FIELD(mAngleInnerCone)>("mAngleInnerCone","mAngleInnerCone");
		addField<DAS_BIND_MANAGED_FIELD(mAngleOuterCone)>("mAngleOuterCone","mAngleOuterCone");
		addField<DAS_BIND_MANAGED_FIELD(mSize)>("mSize","mSize");
	}
};

struct aiCamera_GeneratedAnnotation : ManagedStructureAnnotation<aiCamera> {
	aiCamera_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiCamera", ml, "aiCamera") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mName)>("mName","mName");
		addField<DAS_BIND_MANAGED_FIELD(mPosition)>("mPosition","mPosition");
		addField<DAS_BIND_MANAGED_FIELD(mUp)>("mUp","mUp");
		addField<DAS_BIND_MANAGED_FIELD(mLookAt)>("mLookAt","mLookAt");
		addField<DAS_BIND_MANAGED_FIELD(mHorizontalFOV)>("mHorizontalFOV","mHorizontalFOV");
		addField<DAS_BIND_MANAGED_FIELD(mClipPlaneNear)>("mClipPlaneNear","mClipPlaneNear");
		addField<DAS_BIND_MANAGED_FIELD(mClipPlaneFar)>("mClipPlaneFar","mClipPlaneFar");
		addField<DAS_BIND_MANAGED_FIELD(mAspect)>("mAspect","mAspect");
	}
};

struct aiUVTransform_GeneratedAnnotation : ManagedStructureAnnotation<aiUVTransform> {
	aiUVTransform_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiUVTransform", ml, "aiUVTransform") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mTranslation)>("mTranslation","mTranslation");
		addField<DAS_BIND_MANAGED_FIELD(mScaling)>("mScaling","mScaling");
		addField<DAS_BIND_MANAGED_FIELD(mRotation)>("mRotation","mRotation");
	}
};

struct aiMaterialProperty_GeneratedAnnotation : ManagedStructureAnnotation<aiMaterialProperty> {
	aiMaterialProperty_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiMaterialProperty", ml, "aiMaterialProperty") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mKey)>("mKey","mKey");
		addField<DAS_BIND_MANAGED_FIELD(mSemantic)>("mSemantic","mSemantic");
		addField<DAS_BIND_MANAGED_FIELD(mIndex)>("mIndex","mIndex");
		addField<DAS_BIND_MANAGED_FIELD(mDataLength)>("mDataLength","mDataLength");
		addField<DAS_BIND_MANAGED_FIELD(mType)>("mType","mType");
		addField<DAS_BIND_MANAGED_FIELD(mData)>("mData","mData");
	}
};

struct aiMaterial_GeneratedAnnotation : ManagedStructureAnnotation<aiMaterial> {
	aiMaterial_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiMaterial", ml, "aiMaterial") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mProperties)>("mProperties","mProperties");
		addField<DAS_BIND_MANAGED_FIELD(mNumProperties)>("mNumProperties","mNumProperties");
		addField<DAS_BIND_MANAGED_FIELD(mNumAllocated)>("mNumAllocated","mNumAllocated");
	}
};

struct aiVectorKey_GeneratedAnnotation : ManagedStructureAnnotation<aiVectorKey> {
	aiVectorKey_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiVectorKey", ml, "aiVectorKey") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mTime)>("mTime","mTime");
		addField<DAS_BIND_MANAGED_FIELD(mValue)>("mValue","mValue");
	}
};

struct aiQuatKey_GeneratedAnnotation : ManagedStructureAnnotation<aiQuatKey> {
	aiQuatKey_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiQuatKey", ml, "aiQuatKey") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mTime)>("mTime","mTime");
		addField<DAS_BIND_MANAGED_FIELD(mValue)>("mValue","mValue");
	}
};

struct aiMeshKey_GeneratedAnnotation : ManagedStructureAnnotation<aiMeshKey> {
	aiMeshKey_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiMeshKey", ml, "aiMeshKey") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mTime)>("mTime","mTime");
		addField<DAS_BIND_MANAGED_FIELD(mValue)>("mValue","mValue");
	}
};

struct aiMeshMorphKey_GeneratedAnnotation : ManagedStructureAnnotation<aiMeshMorphKey> {
	aiMeshMorphKey_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiMeshMorphKey", ml, "aiMeshMorphKey") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mTime)>("mTime","mTime");
		addField<DAS_BIND_MANAGED_FIELD(mValues)>("mValues","mValues");
		addField<DAS_BIND_MANAGED_FIELD(mWeights)>("mWeights","mWeights");
		addField<DAS_BIND_MANAGED_FIELD(mNumValuesAndWeights)>("mNumValuesAndWeights","mNumValuesAndWeights");
	}
};

struct aiNodeAnim_GeneratedAnnotation : ManagedStructureAnnotation<aiNodeAnim> {
	aiNodeAnim_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiNodeAnim", ml, "aiNodeAnim") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mNodeName)>("mNodeName","mNodeName");
		addField<DAS_BIND_MANAGED_FIELD(mNumPositionKeys)>("mNumPositionKeys","mNumPositionKeys");
		addField<DAS_BIND_MANAGED_FIELD(mPositionKeys)>("mPositionKeys","mPositionKeys");
		addField<DAS_BIND_MANAGED_FIELD(mNumRotationKeys)>("mNumRotationKeys","mNumRotationKeys");
		addField<DAS_BIND_MANAGED_FIELD(mRotationKeys)>("mRotationKeys","mRotationKeys");
		addField<DAS_BIND_MANAGED_FIELD(mNumScalingKeys)>("mNumScalingKeys","mNumScalingKeys");
		addField<DAS_BIND_MANAGED_FIELD(mScalingKeys)>("mScalingKeys","mScalingKeys");
		addField<DAS_BIND_MANAGED_FIELD(mPreState)>("mPreState","mPreState");
		addField<DAS_BIND_MANAGED_FIELD(mPostState)>("mPostState","mPostState");
	}
};

struct aiMeshAnim_GeneratedAnnotation : ManagedStructureAnnotation<aiMeshAnim> {
	aiMeshAnim_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiMeshAnim", ml, "aiMeshAnim") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mName)>("mName","mName");
		addField<DAS_BIND_MANAGED_FIELD(mNumKeys)>("mNumKeys","mNumKeys");
		addField<DAS_BIND_MANAGED_FIELD(mKeys)>("mKeys","mKeys");
	}
};

struct aiMeshMorphAnim_GeneratedAnnotation : ManagedStructureAnnotation<aiMeshMorphAnim> {
	aiMeshMorphAnim_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiMeshMorphAnim", ml, "aiMeshMorphAnim") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mName)>("mName","mName");
		addField<DAS_BIND_MANAGED_FIELD(mNumKeys)>("mNumKeys","mNumKeys");
		addField<DAS_BIND_MANAGED_FIELD(mKeys)>("mKeys","mKeys");
	}
};

struct aiAnimation_GeneratedAnnotation : ManagedStructureAnnotation<aiAnimation> {
	aiAnimation_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiAnimation", ml, "aiAnimation") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mName)>("mName","mName");
		addField<DAS_BIND_MANAGED_FIELD(mDuration)>("mDuration","mDuration");
		addField<DAS_BIND_MANAGED_FIELD(mTicksPerSecond)>("mTicksPerSecond","mTicksPerSecond");
		addField<DAS_BIND_MANAGED_FIELD(mNumChannels)>("mNumChannels","mNumChannels");
		addField<DAS_BIND_MANAGED_FIELD(mChannels)>("mChannels","mChannels");
		addField<DAS_BIND_MANAGED_FIELD(mNumMeshChannels)>("mNumMeshChannels","mNumMeshChannels");
		addField<DAS_BIND_MANAGED_FIELD(mMeshChannels)>("mMeshChannels","mMeshChannels");
		addField<DAS_BIND_MANAGED_FIELD(mNumMorphMeshChannels)>("mNumMorphMeshChannels","mNumMorphMeshChannels");
		addField<DAS_BIND_MANAGED_FIELD(mMorphMeshChannels)>("mMorphMeshChannels","mMorphMeshChannels");
	}
};

struct aiMetadataEntry_GeneratedAnnotation : ManagedStructureAnnotation<aiMetadataEntry> {
	aiMetadataEntry_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiMetadataEntry", ml, "aiMetadataEntry") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mType)>("mType","mType");
		addField<DAS_BIND_MANAGED_FIELD(mData)>("mData","mData");
	}
};

struct aiMetadata_GeneratedAnnotation : ManagedStructureAnnotation<aiMetadata> {
	aiMetadata_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiMetadata", ml, "aiMetadata") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mNumProperties)>("mNumProperties","mNumProperties");
		addField<DAS_BIND_MANAGED_FIELD(mKeys)>("mKeys","mKeys");
		addField<DAS_BIND_MANAGED_FIELD(mValues)>("mValues","mValues");
	}
};

struct aiNode_GeneratedAnnotation : ManagedStructureAnnotation<aiNode> {
	aiNode_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiNode", ml, "aiNode") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mName)>("mName","mName");
		addField<DAS_BIND_MANAGED_FIELD(mTransformation)>("mTransformation","mTransformation");
		addField<DAS_BIND_MANAGED_FIELD(mParent)>("mParent","mParent");
		addField<DAS_BIND_MANAGED_FIELD(mNumChildren)>("mNumChildren","mNumChildren");
		addField<DAS_BIND_MANAGED_FIELD(mChildren)>("mChildren","mChildren");
		addField<DAS_BIND_MANAGED_FIELD(mNumMeshes)>("mNumMeshes","mNumMeshes");
		addField<DAS_BIND_MANAGED_FIELD(mMeshes)>("mMeshes","mMeshes");
		addField<DAS_BIND_MANAGED_FIELD(mMetaData)>("mMetaData","mMetaData");
	}
};

struct aiScene_GeneratedAnnotation : ManagedStructureAnnotation<aiScene> {
	aiScene_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("aiScene", ml, "aiScene") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(mFlags)>("mFlags","mFlags");
		addField<DAS_BIND_MANAGED_FIELD(mRootNode)>("mRootNode","mRootNode");
		addField<DAS_BIND_MANAGED_FIELD(mNumMeshes)>("mNumMeshes","mNumMeshes");
		addField<DAS_BIND_MANAGED_FIELD(mMeshes)>("mMeshes","mMeshes");
		addField<DAS_BIND_MANAGED_FIELD(mNumMaterials)>("mNumMaterials","mNumMaterials");
		addField<DAS_BIND_MANAGED_FIELD(mMaterials)>("mMaterials","mMaterials");
		addField<DAS_BIND_MANAGED_FIELD(mNumAnimations)>("mNumAnimations","mNumAnimations");
		addField<DAS_BIND_MANAGED_FIELD(mAnimations)>("mAnimations","mAnimations");
		addField<DAS_BIND_MANAGED_FIELD(mNumTextures)>("mNumTextures","mNumTextures");
		addField<DAS_BIND_MANAGED_FIELD(mTextures)>("mTextures","mTextures");
		addField<DAS_BIND_MANAGED_FIELD(mNumLights)>("mNumLights","mNumLights");
		addField<DAS_BIND_MANAGED_FIELD(mLights)>("mLights","mLights");
		addField<DAS_BIND_MANAGED_FIELD(mNumCameras)>("mNumCameras","mNumCameras");
		addField<DAS_BIND_MANAGED_FIELD(mCameras)>("mCameras","mCameras");
		addField<DAS_BIND_MANAGED_FIELD(mPrivate)>("mPrivate","mPrivate");
	}
};

